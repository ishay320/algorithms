O(n^3)

super_best(matrix mat)
m = mat.length
n = mat[0].length
sum_mat[n][m]
for i to n: O(n^2)
    for j to m:
        if(i == 0)
            sum_mat[i][j] = mat[i][j]
        else
            sum_mat[i][j] = sum_mat[i-1][j]+mat[i][j]


best , startCol, startRow, endCol, endRow = 0
sum, tmpStartCol,tmpStartRow = 0

for i=0 to n: O(n^3)
    for j=i to n:
        for k=0 to m:
            if(i == 0)
                sum += sum_mat[j][k]
            else
                sum+=sum_mat[j][k]-sum_mat[i][k]
            if(sum<0)
                sum = 0
                tmpStartRow = i
                tmpStartCol = k 
            else
                if(best<sum)
                    best = sum
                    startCol = tmpStartCol
                    startRow = tmpStartRow
                    endCol = j
                    endRow = k
return (best,startCol,startRow,endCol,endRow)